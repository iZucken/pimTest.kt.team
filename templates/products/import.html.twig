{% extends 'default/layout.html.twig' %}

{% block html_head %}
    <link rel="stylesheet" type="text/css"
          href="https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.1/datatables.min.css"/>
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.6.0/dt-1.13.1/datatables.min.js"></script>
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
{% endblock %}

{% block title %}
    Import product data
{% endblock %}

{% block content %}
    <div>
        <script>
            Dropzone.options.addImportSource = {
                url: "/import/upload",
                paramName: "importSource",
                parallelUploads: 1,
                acceptedFiles: '.xml,text/xml',
                chunking: false,
                retryChunks: false,
                maxFilesize: 1000, // MB
            };
        </script>
        <form action="/import/upload" method="post" class='dropzone' id="addImportSource">
            <input type="file" name='importSource' style="display: none" required>
        </form>
    </div>
    <div id="alerts"></div>
    <table class="table" id="importLogTable">
        <thead>
        <tr>
            <th scope="col">Source</th>
            <th scope="col">Started</th>
            <th scope="col">Status</th>
            <th scope="col" style="width: 40%">Progress</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        </tbody>
    </table>
    <script>
        $(document).ready(function () {
            function statusColor(status) {
                switch (status) {
                    case 1:
                        return 'secondary';
                    case 2:
                        return 'primary';
                    case 3:
                        return 'danger';
                    case 4:
                        return 'secondary';
                    default:
                        return '';
                }
            }

            let datatable = $('#importLogTable').DataTable({
                processing: false,
                paging: false,
                searching: false,
                ordering: false,
                serverSide: true,
                orderCellsTop: true,
                order: [],
                ajax: {
                    url: '/importLog/datatable',
                    type: 'GET',
                },
                columns: [
                    {data: "sourceFilename", className: 'align-middle'},
                    {data: "startedAt", className: 'align-middle'},
                    {
                        render: (data, type, row) => {
                            let mainStatus = statusColor(row.state);
                            let shortStateMessage = row.state === 1 ? 'Processing'
                                : row.state === 2 ? 'Completed'
                                    : row.state === 3 ? 'Error'
                                        : row.state === 4 ? 'Cancelled'
                                            : `Invalid state ${row.state}`
                            return `<span class="badge bg-${mainStatus}" title="${row.statusMessage}">${shortStateMessage}</span>`;
                        }, className: 'align-middle'
                    },
                    {
                        className: 'align-middle',
                        render: (data, type, row) => {
                            let animate = row.state === 1 ? 'progress-bar-striped progress-bar-animated' : ''
                            let skipped = row.stats.discovered - (row.stats.created + row.stats.updated + row.stats.malformed)
                            let skippedPercentile = skipped / row.stats.discovered * 100
                            let createdPercentile = row.stats.created / row.stats.discovered * 100
                            let updatedPercentile = row.stats.updated / row.stats.discovered * 100
                            let malformedPercentile = row.stats.malformed / row.stats.discovered * 100
                            let mainStatus = row.state === 3 ? 'danger'
                                : row.state === 1 ? 'secondary'
                                    : row.state === 4 ? 'secondary' : '';
                            if (row.stats.discovered === 0) {
                                return `<div class="progress">
                                <div class="progress-bar bg-${mainStatus} ${animate}" style="width: 100%" title="Pending...">
                                </div>
                            </div>`
                            }
                            return `<div class="progress">
                                <div class="progress-bar bg-${mainStatus} ${animate}" style="width: ${skippedPercentile}%" title="Skipped records (no changes)">
                                    ${skipped}
                                </div>
                                <div class="progress-bar bg-info ${animate}" style="width: ${updatedPercentile}%" title="Updated records">
                                    ${row.stats.updated}
                                </div>
                                <div class="progress-bar bg-success ${animate}" style="width: ${createdPercentile}%" title="Added records">
                                    ${row.stats.created}
                                </div>
                                <div class="progress-bar bg-warning ${animate}" style="width: ${malformedPercentile}%" title="Records that contain format errors">
                                    ${row.stats.malformed}
                                </div>
                            </div>`
                        }
                    },
                    {
                        className: 'align-middle',
                        render: (data, type, row) => row.state !== 1 ? `<a class="btn btn-sm btn-primary" href="/importLog/${row.uuid}/csv" target="_blank" download>
                            <span data-feather="download-cloud"></span>
                            Download CSV
                        </a>` : ''
                    },
                ]
            });
            setInterval(function () {
                datatable.ajax.reload();
            }, 1500);
        });
    </script>
{% endblock %}